version: '2'

services:
    web-dev:
        image: web-dev:${APP_VERSION}
        build: ./devops/nginx/dev
        ports:
            - ${NGINX_HOST_PORT}:80
        volumes:
            - ./volumes/nginx/logs:/var/log/nginx/
        volumes_from:
            - php-dev:ro
        depends_on:
            - php-dev
    db-dev:
        image: db-dev:${APP_VERSION}
        build:
            context: devops/mysql/dev
            args:
                MYSQL_VERSION: ${MYSQL_VERSION}
        volumes:
            - db:/var/lib/mysql/
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - ${MYSQL_HOST_PORT}:3306
    php-base:
        image: php7-base:${APP_VERSION}
        build:
            context: devops/php-fpm/base
    php-dev:
        image: php7-dev:${APP_VERSION}
        build:
            context: devops/php-fpm/dev
            args:
                BASE_IMAGE: php7-base:${APP_VERSION}
                USER_ID: ${USER_ID}
                GROUP_ID: ${GROUP_ID}
        volumes:
            - ./:/var/www/app/
            - ${HOME}/.gitconfig:/home/www-data/.gitconfig
            - ${HOME}/.git-credentials:/home/www-data/.git-credentials
            - ${HOME}/.ssh:/home/www-data/.ssh
            - composer_cache:/.composer/cache/
        depends_on:
            - db-dev
    redis:
        image: redis-dev:${APP_VERSION}
        build:
            context: devops/redis/dev
            args:
                REDIS_VERSION: ${REDIS_VERSION}
        ports:
            - ${REDIS_HOST_PORT}:6379
    elasticsearch:
        build:
            context: devops/elk/elasticsearch
            args:
                ELK_VERSION: ${ELK_VERSION}
        volumes:
            - elasticsearch:/usr/share/elasticsearch/data/
        environment:
            discovery.type: single-node
        ports:
            - ${ELASTICSEARCH_HOST_PORT}:9200
    logstash:
        build:
            context: devops/elk/logstash
            args:
                ELK_VERSION: ${ELK_VERSION}
        depends_on:
            - elasticsearch
    kibana:
        build:
            context: devops/elk/kibana
            args:
                ELK_VERSION: ${ELK_VERSION}
        ports:
            - ${KIBANA_HOST_PORT}:5601
        depends_on:
            - logstash

volumes:
    db:
    elasticsearch:
    composer_cache: